/* Copyright (C) 2010 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
package com.google.gson.functional;
/**
 * Unit tests to validate serialization of parameterized types without explicit types
 *
 * @author Inderjeet Singh
 */
public class RawSerializationTest_testTwoLevelParameterizedObject_2000 extends junit.framework.TestCase {
    private com.google.gson.Gson gson;

    @java.lang.Override
    protected void setUp() throws java.lang.Exception {
        super.setUp();
        gson = new com.google.gson.Gson();
    }

    public void testTwoLevelParameterizedObject_1999() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1998() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1997() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1996() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1995() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1994() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1993() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1992() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1991() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1990() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1989() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1988() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1987() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1986() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1985() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1984() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1983() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1982() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1981() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1980() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1979() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1978() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1977() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1976() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1975() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1974() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1973() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1972() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1971() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1970() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1969() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1968() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1967() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1966() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1965() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1964() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1963() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1962() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1961() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1960() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1959() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1958() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1957() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1956() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1955() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1954() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1953() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1952() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1951() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1950() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1949() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1948() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1947() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1946() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1945() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1944() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1943() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1942() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1941() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1940() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1939() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1938() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1937() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1936() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1935() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1934() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1933() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1932() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1931() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1930() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1929() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1928() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1927() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1926() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1925() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1924() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1923() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1922() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1921() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1920() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1919() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1918() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1917() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1916() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1915() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1914() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1913() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1912() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1911() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1910() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1909() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1908() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1907() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1906() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1905() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1904() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1903() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1902() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1901() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1900() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1899() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1898() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1897() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1896() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1895() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1894() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1893() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1892() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1891() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1890() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1889() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1888() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1887() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1886() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1885() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1884() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1883() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1882() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1881() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1880() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1879() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1878() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1877() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1876() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1875() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1874() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1873() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1872() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1871() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1870() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1869() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1868() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1867() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1866() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1865() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1864() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1863() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1862() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1861() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1860() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1859() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1858() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1857() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1856() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1855() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1854() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1853() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1852() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1851() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1850() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1849() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1848() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1847() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1846() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1845() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1844() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1843() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1842() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1841() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1840() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1839() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1838() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1837() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1836() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1835() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1834() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1833() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1832() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1831() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1830() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1829() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1828() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1827() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1826() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1825() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1824() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1823() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1822() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1821() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1820() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1819() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1818() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1817() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1816() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1815() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1814() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1813() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1812() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1811() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1810() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1809() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1808() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1807() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1806() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1805() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1804() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1803() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1802() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1801() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1800() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1799() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1798() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1797() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1796() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1795() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1794() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1793() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1792() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1791() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1790() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1789() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1788() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1787() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1786() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1785() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1784() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1783() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1782() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1781() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1780() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1779() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1778() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1777() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1776() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1775() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1774() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1773() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1772() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1771() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1770() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1769() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1768() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1767() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1766() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1765() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1764() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1763() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1762() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1761() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1760() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1759() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1758() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1757() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1756() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1755() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1754() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1753() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1752() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1751() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1750() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1749() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1748() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1747() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1746() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1745() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1744() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1743() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1742() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1741() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1740() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1739() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1738() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1737() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1736() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1735() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1734() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1733() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1732() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1731() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1730() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1729() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1728() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1727() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1726() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1725() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1724() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1723() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1722() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1721() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1720() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1719() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1718() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1717() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1716() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1715() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1714() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1713() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1712() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1711() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1710() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1709() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1708() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1707() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1706() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1705() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1704() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1703() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1702() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1701() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1700() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1699() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1698() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1697() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1696() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1695() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1694() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1693() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1692() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1691() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1690() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1689() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1688() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1687() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1686() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1685() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1684() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1683() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1682() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1681() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1680() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1679() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1678() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1677() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1676() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1675() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1674() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1673() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1672() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1671() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1670() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1669() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1668() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1667() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1666() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1665() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1664() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1663() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1662() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1661() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1660() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1659() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1658() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1657() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1656() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1655() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1654() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1653() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1652() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1651() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1650() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1649() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1648() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1647() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1646() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1645() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1644() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1643() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1642() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1641() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1640() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1639() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1638() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1637() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1636() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1635() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1634() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1633() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1632() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1631() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1630() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1629() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1628() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1627() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1626() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1625() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1624() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1623() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1622() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1621() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1620() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1619() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1618() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1617() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1616() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1615() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1614() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1613() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1612() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1611() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1610() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1609() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1608() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1607() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1606() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1605() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1604() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1603() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1602() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1601() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1600() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1599() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1598() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1597() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1596() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1595() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1594() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1593() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1592() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1591() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1590() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1589() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1588() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1587() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1586() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1585() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1584() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1583() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1582() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1581() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1580() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1579() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1578() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1577() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1576() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1575() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1574() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1573() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1572() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1571() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1570() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1569() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1568() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1567() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1566() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1565() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1564() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1563() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1562() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1561() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1560() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1559() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1558() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1557() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1556() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1555() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1554() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1553() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1552() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1551() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1550() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1549() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1548() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1547() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1546() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1545() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1544() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1543() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1542() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1541() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1540() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1539() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1538() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1537() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1536() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1535() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1534() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1533() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1532() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1531() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1530() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1529() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1528() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1527() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1526() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1525() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1524() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1523() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1522() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1521() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1520() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1519() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1518() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1517() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1516() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1515() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1514() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1513() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1512() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1511() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1510() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1509() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1508() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1507() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1506() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1505() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1504() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1503() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1502() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1501() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1500() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1499() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1498() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1497() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1496() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1495() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1494() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1493() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1492() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1491() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1490() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1489() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1488() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1487() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1486() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1485() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1484() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1483() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1482() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1481() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1480() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1479() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1478() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1477() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1476() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1475() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1474() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1473() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1472() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1471() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1470() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1469() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1468() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1467() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1466() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1465() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1464() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1463() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1462() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1461() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1460() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1459() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1458() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1457() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1456() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1455() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1454() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1453() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1452() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1451() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1450() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1449() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1448() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1447() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1446() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1445() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1444() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1443() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1442() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1441() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1440() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1439() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1438() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1437() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1436() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1435() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1434() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1433() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1432() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1431() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1430() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1429() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1428() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1427() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1426() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1425() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1424() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1423() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1422() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1421() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1420() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1419() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1418() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1417() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1416() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1415() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1414() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1413() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1412() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1411() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1410() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1409() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1408() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1407() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1406() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1405() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1404() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1403() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1402() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1401() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1400() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1399() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1398() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1397() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1396() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1395() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1394() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1393() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1392() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1391() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1390() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1389() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1388() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1387() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1386() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1385() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1384() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1383() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1382() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1381() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1380() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1379() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1378() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1377() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1376() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1375() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1374() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1373() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1372() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1371() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1370() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1369() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1368() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1367() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1366() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1365() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1364() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1363() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1362() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1361() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1360() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1359() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1358() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1357() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1356() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1355() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1354() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1353() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1352() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1351() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1350() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1349() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1348() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1347() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1346() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1345() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1344() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1343() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1342() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1341() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1340() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1339() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1338() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1337() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1336() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1335() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1334() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1333() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1332() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1331() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1330() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1329() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1328() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1327() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1326() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1325() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1324() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1323() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1322() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1321() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1320() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1319() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1318() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1317() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1316() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1315() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1314() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1313() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1312() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1311() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1310() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1309() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1308() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1307() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1306() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1305() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1304() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1303() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1302() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1301() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1300() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1299() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1298() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1297() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1296() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1295() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1294() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1293() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1292() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1291() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1290() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1289() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1288() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1287() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1286() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1285() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1284() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1283() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1282() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1281() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1280() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1279() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1278() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1277() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1276() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1275() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1274() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1273() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1272() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1271() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1270() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1269() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1268() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1267() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1266() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1265() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1264() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1263() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1262() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1261() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1260() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1259() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1258() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1257() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1256() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1255() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1254() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1253() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1252() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1251() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1250() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1249() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1248() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1247() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1246() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1245() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1244() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1243() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1242() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1241() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1240() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1239() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1238() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1237() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1236() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1235() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1234() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1233() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1232() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1231() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1230() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1229() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1228() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1227() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1226() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1225() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1224() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1223() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1222() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1221() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1220() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1219() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1218() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1217() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1216() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1215() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1214() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1213() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1212() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1211() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1210() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1209() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1208() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1207() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1206() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1205() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1204() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1203() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1202() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1201() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1200() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1199() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1198() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1197() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1196() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1195() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1194() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1193() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1192() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1191() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1190() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1189() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1188() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1187() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1186() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1185() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1184() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1183() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1182() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1181() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1180() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1179() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1178() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1177() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1176() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1175() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1174() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1173() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1172() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1171() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1170() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1169() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1168() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1167() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1166() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1165() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1164() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1163() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1162() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1161() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1160() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1159() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1158() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1157() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1156() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1155() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1154() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1153() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1152() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1151() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1150() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1149() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1148() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1147() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1146() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1145() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1144() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1143() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1142() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1141() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1140() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1139() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1138() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1137() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1136() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1135() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1134() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1133() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1132() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1131() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1130() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1129() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1128() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1127() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1126() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1125() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1124() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1123() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1122() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1121() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1120() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1119() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1118() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1117() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1116() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1115() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1114() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1113() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1112() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1111() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1110() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1109() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1108() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1107() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1106() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1105() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1104() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1103() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1102() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1101() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1100() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1099() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1098() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1097() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1096() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1095() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1094() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1093() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1092() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1091() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1090() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1089() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1088() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1087() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1086() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1085() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1084() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1083() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1082() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1081() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1080() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1079() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1078() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1077() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1076() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1075() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1074() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1073() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1072() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1071() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1070() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1069() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1068() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1067() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1066() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1065() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1064() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1063() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1062() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1061() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1060() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1059() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1058() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1057() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1056() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1055() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1054() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1053() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1052() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1051() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1050() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1049() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1048() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1047() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1046() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1045() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1044() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1043() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1042() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1041() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1040() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1039() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1038() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1037() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1036() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1035() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1034() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1033() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1032() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1031() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1030() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1029() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1028() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1027() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1026() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1025() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1024() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1023() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1022() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1021() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1020() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1019() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1018() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1017() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1016() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1015() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1014() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1013() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1012() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1011() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1010() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1009() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1008() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1007() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1006() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1005() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1004() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1003() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1002() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1001() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1000() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_999() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_998() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_997() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_996() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_995() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_994() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_993() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_992() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_991() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_990() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_989() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_988() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_987() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_986() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_985() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_984() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_983() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_982() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_981() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_980() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_979() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_978() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_977() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_976() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_975() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_974() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_973() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_972() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_971() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_970() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_969() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_968() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_967() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_966() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_965() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_964() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_963() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_962() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_961() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_960() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_959() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_958() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_957() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_956() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_955() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_954() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_953() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_952() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_951() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_950() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_949() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_948() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_947() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_946() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_945() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_944() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_943() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_942() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_941() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_940() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_939() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_938() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_937() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_936() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_935() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_934() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_933() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_932() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_931() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_930() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_929() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_928() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_927() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_926() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_925() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_924() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_923() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_922() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_921() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_920() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_919() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_918() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_917() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_916() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_915() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_914() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_913() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_912() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_911() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_910() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_909() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_908() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_907() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_906() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_905() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_904() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_903() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_902() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_901() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_900() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_899() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_898() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_897() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_896() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_895() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_894() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_893() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_892() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_891() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_890() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_889() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_888() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_887() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_886() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_885() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_884() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_883() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_882() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_881() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_880() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_879() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_878() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_877() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_876() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_875() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_874() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_873() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_872() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_871() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_870() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_869() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_868() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_867() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_866() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_865() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_864() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_863() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_862() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_861() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_860() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_859() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_858() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_857() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_856() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_855() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_854() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_853() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_852() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_851() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_850() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_849() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_848() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_847() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_846() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_845() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_844() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_843() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_842() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_841() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_840() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_839() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_838() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_837() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_836() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_835() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_834() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_833() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_832() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_831() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_830() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_829() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_828() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_827() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_826() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_825() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_824() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_823() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_822() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_821() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_820() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_819() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_818() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_817() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_816() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_815() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_814() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_813() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_812() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_811() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_810() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_809() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_808() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_807() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_806() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_805() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_804() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_803() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_802() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_801() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_800() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_799() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_798() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_797() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_796() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_795() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_794() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_793() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_792() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_791() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_790() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_789() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_788() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_787() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_786() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_785() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_784() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_783() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_782() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_781() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_780() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_779() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_778() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_777() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_776() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_775() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_774() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_773() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_772() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_771() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_770() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_769() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_768() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_767() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_766() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_765() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_764() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_763() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_762() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_761() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_760() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_759() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_758() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_757() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_756() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_755() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_754() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_753() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_752() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_751() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_750() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_749() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_748() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_747() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_746() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_745() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_744() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_743() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_742() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_741() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_740() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_739() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_738() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_737() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_736() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_735() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_734() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_733() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_732() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_731() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_730() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_729() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_728() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_727() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_726() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_725() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_724() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_723() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_722() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_721() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_720() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_719() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_718() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_717() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_716() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_715() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_714() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_713() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_712() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_711() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_710() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_709() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_708() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_707() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_706() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_705() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_704() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_703() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_702() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_701() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_700() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_699() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_698() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_697() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_696() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_695() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_694() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_693() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_692() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_691() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_690() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_689() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_688() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_687() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_686() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_685() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_684() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_683() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_682() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_681() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_680() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_679() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_678() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_677() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_676() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_675() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_674() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_673() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_672() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_671() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_670() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_669() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_668() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_667() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_666() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_665() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_664() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_663() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_662() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_661() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_660() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_659() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_658() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_657() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_656() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_655() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_654() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_653() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_652() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_651() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_650() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_649() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_648() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_647() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_646() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_645() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_644() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_643() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_642() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_641() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_640() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_639() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_638() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_637() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_636() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_635() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_634() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_633() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_632() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_631() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_630() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_629() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_628() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_627() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_626() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_625() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_624() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_623() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_622() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_621() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_620() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_619() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_618() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_617() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_616() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_615() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_614() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_613() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_612() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_611() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_610() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_609() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_608() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_607() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_606() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_605() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_604() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_603() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_602() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_601() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_600() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_599() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_598() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_597() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_596() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_595() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_594() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_593() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_592() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_591() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_590() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_589() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_588() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_587() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_586() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_585() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_584() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_583() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_582() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_581() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_580() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_579() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_578() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_577() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_576() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_575() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_574() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_573() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_572() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_571() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_570() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_569() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_568() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_567() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_566() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_565() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_564() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_563() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_562() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_561() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_560() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_559() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_558() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_557() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_556() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_555() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_554() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_553() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_552() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_551() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_550() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_549() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_548() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_547() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_546() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_545() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_544() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_543() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_542() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_541() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_540() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_539() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_538() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_537() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_536() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_535() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_534() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_533() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_532() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_531() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_530() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_529() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_528() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_527() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_526() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_525() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_524() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_523() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_522() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_521() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_520() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_519() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_518() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_517() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_516() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_515() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_514() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_513() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_512() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_511() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_510() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_509() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_508() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_507() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_506() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_505() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_504() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_503() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_502() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_501() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_500() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_499() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_498() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_497() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_496() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_495() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_494() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_493() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_492() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_491() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_490() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_489() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_488() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_487() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_486() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_485() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_484() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_483() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_482() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_481() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_480() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_479() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_478() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_477() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_476() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_475() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_474() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_473() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_472() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_471() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_470() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_469() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_468() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_467() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_466() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_465() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_464() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_463() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_462() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_461() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_460() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_459() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_458() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_457() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_456() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_455() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_454() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_453() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_452() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_451() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_450() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_449() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_448() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_447() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_446() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_445() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_444() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_443() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_442() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_441() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_440() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_439() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_438() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_437() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_436() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_435() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_434() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_433() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_432() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_431() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_430() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_429() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_428() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_427() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_426() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_425() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_424() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_423() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_422() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_421() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_420() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_419() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_418() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_417() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_416() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_415() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_414() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_413() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_412() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_411() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_410() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_409() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_408() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_407() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_406() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_405() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_404() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_403() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_402() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_401() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_400() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_399() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_398() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_397() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_396() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_395() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_394() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_393() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_392() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_391() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_390() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_389() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_388() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_387() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_386() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_385() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_384() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_383() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_382() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_381() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_380() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_379() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_378() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_377() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_376() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_375() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_374() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_373() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_372() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_371() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_370() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_369() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_368() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_367() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_366() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_365() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_364() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_363() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_362() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_361() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_360() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_359() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_358() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_357() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_356() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_355() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_354() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_353() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_352() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_351() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_350() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_349() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_348() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_347() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_346() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_345() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_344() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_343() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_342() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_341() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_340() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_339() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_338() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_337() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_336() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_335() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_334() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_333() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_332() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_331() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_330() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_329() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_328() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_327() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_326() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_325() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_324() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_323() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_322() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_321() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_320() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_319() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_318() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_317() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_316() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_315() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_314() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_313() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_312() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_311() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_310() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_309() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_308() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_307() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_306() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_305() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_304() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_303() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_302() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_301() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_300() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_299() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_298() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_297() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_296() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_295() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_294() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_293() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_292() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_291() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_290() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_289() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_288() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_287() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_286() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_285() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_284() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_283() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_282() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_281() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_280() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_279() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_278() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_277() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_276() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_275() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_274() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_273() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_272() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_271() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_270() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_269() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_268() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_267() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_266() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_265() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_264() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_263() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_262() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_261() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_260() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_259() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_258() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_257() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_256() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_255() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_254() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_253() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_252() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_251() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_250() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_249() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_248() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_247() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_246() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_245() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_244() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_243() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_242() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_241() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_240() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_239() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_238() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_237() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_236() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_235() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_234() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_233() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_232() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_231() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_230() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_229() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_228() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_227() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_226() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_225() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_224() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_223() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_222() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_221() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_220() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_219() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_218() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_217() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_216() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_215() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_214() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_213() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_212() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_211() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_210() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_209() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_208() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_207() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_206() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_205() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_204() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_203() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_202() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_201() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_200() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_199() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_198() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_197() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_196() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_195() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_194() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_193() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_192() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_191() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_190() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_189() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_188() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_187() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_186() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_185() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_184() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_183() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_182() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_181() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_180() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_179() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_178() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_177() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_176() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_175() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_174() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_173() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_172() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_171() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_170() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_169() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_168() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_167() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_166() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_165() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_164() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_163() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_162() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_161() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_160() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_159() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_158() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_157() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_156() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_155() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_154() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_153() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_152() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_151() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_150() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_149() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_148() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_147() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_146() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_145() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_144() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_143() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_142() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_141() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_140() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_139() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_138() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_137() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_136() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_135() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_134() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_133() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_132() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_131() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_130() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_129() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_128() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_127() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_126() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_125() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_124() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_123() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_122() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_121() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_120() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_119() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_118() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_117() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_116() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_115() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_114() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_113() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_112() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_111() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_110() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_109() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_108() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_107() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_106() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_105() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_104() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_103() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_102() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_101() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_100() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_99() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_98() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_97() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_96() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_95() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_94() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_93() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_92() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_91() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_90() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_89() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_88() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_87() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_86() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_85() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_84() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_83() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_82() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_81() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_80() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_79() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_78() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_77() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_76() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_75() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_74() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_73() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_72() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_71() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_70() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_69() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_68() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_67() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_66() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_65() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_64() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_63() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_62() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_61() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_60() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_59() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_58() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_57() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_56() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_55() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_54() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_53() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_52() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_51() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_50() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_49() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_48() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_47() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_46() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_45() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_44() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_43() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_42() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_41() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_40() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_39() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_38() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_37() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_36() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_35() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_34() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_33() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_32() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_31() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_30() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_29() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_28() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_27() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_26() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_25() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_24() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_23() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_22() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_21() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_20() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_19() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_18() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_17() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_16() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_15() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_14() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_13() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_12() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_11() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_10() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_9() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_8() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_7() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_6() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_5() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_4() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_3() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_2() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_0() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    private static class Foo {
        @java.lang.SuppressWarnings("unused")
        int b;

        Foo(int b) {
            this.b = b;
        }
    }

    private static class Bar<T> {
        @java.lang.SuppressWarnings("unused")
        T t;

        Bar(T t) {
            this.t = t;
        }
    }

    public static junit.framework.Test suite() {
        junit.extensions.TestSetup setup = new junit.extensions.TestSetup(new junit.framework.TestSuite(com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_2000.class) {}) {
            protected void setUp() {
                org.powerapi.jjoules.junit4.EnergyTest.beforeTest("com.google.gson.functional.RawSerializationTest", "testTwoLevelParameterizedObject");
            }

            protected void tearDown() {
                org.powerapi.jjoules.junit4.EnergyTest.afterTest();
            }
        };
        return setup;
    }
}
/* Copyright (C) 2010 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
package com.google.gson.functional;
/**
 * Unit tests to validate serialization of parameterized types without explicit types
 *
 * @author Inderjeet Singh
 */
public class RawSerializationTest_testTwoLevelParameterizedObject_1000 extends junit.framework.TestCase {
    private com.google.gson.Gson gson;

    @java.lang.Override
    protected void setUp() throws java.lang.Exception {
        super.setUp();
        gson = new com.google.gson.Gson();
    }

    public void testTwoLevelParameterizedObject_999() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_998() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_997() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_996() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_995() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_994() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_993() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_992() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_991() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_990() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_989() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_988() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_987() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_986() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_985() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_984() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_983() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_982() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_981() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_980() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_979() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_978() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_977() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_976() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_975() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_974() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_973() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_972() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_971() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_970() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_969() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_968() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_967() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_966() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_965() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_964() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_963() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_962() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_961() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_960() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_959() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_958() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_957() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_956() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_955() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_954() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_953() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_952() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_951() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_950() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_949() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_948() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_947() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_946() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_945() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_944() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_943() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_942() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_941() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_940() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_939() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_938() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_937() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_936() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_935() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_934() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_933() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_932() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_931() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_930() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_929() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_928() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_927() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_926() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_925() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_924() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_923() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_922() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_921() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_920() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_919() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_918() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_917() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_916() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_915() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_914() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_913() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_912() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_911() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_910() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_909() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_908() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_907() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_906() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_905() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_904() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_903() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_902() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_901() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_900() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_899() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_898() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_897() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_896() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_895() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_894() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_893() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_892() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_891() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_890() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_889() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_888() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_887() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_886() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_885() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_884() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_883() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_882() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_881() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_880() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_879() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_878() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_877() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_876() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_875() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_874() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_873() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_872() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_871() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_870() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_869() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_868() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_867() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_866() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_865() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_864() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_863() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_862() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_861() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_860() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_859() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_858() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_857() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_856() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_855() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_854() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_853() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_852() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_851() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_850() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_849() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_848() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_847() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_846() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_845() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_844() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_843() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_842() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_841() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_840() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_839() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_838() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_837() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_836() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_835() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_834() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_833() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_832() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_831() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_830() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_829() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_828() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_827() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_826() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_825() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_824() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_823() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_822() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_821() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_820() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_819() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_818() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_817() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_816() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_815() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_814() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_813() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_812() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_811() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_810() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_809() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_808() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_807() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_806() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_805() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_804() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_803() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_802() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_801() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_800() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_799() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_798() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_797() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_796() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_795() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_794() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_793() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_792() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_791() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_790() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_789() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_788() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_787() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_786() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_785() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_784() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_783() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_782() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_781() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_780() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_779() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_778() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_777() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_776() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_775() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_774() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_773() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_772() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_771() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_770() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_769() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_768() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_767() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_766() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_765() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_764() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_763() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_762() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_761() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_760() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_759() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_758() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_757() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_756() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_755() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_754() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_753() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_752() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_751() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_750() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_749() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_748() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_747() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_746() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_745() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_744() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_743() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_742() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_741() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_740() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_739() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_738() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_737() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_736() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_735() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_734() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_733() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_732() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_731() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_730() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_729() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_728() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_727() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_726() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_725() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_724() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_723() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_722() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_721() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_720() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_719() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_718() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_717() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_716() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_715() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_714() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_713() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_712() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_711() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_710() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_709() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_708() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_707() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_706() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_705() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_704() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_703() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_702() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_701() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_700() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_699() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_698() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_697() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_696() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_695() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_694() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_693() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_692() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_691() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_690() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_689() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_688() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_687() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_686() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_685() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_684() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_683() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_682() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_681() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_680() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_679() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_678() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_677() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_676() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_675() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_674() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_673() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_672() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_671() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_670() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_669() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_668() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_667() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_666() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_665() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_664() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_663() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_662() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_661() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_660() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_659() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_658() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_657() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_656() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_655() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_654() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_653() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_652() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_651() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_650() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_649() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_648() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_647() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_646() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_645() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_644() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_643() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_642() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_641() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_640() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_639() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_638() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_637() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_636() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_635() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_634() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_633() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_632() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_631() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_630() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_629() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_628() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_627() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_626() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_625() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_624() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_623() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_622() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_621() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_620() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_619() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_618() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_617() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_616() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_615() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_614() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_613() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_612() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_611() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_610() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_609() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_608() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_607() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_606() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_605() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_604() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_603() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_602() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_601() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_600() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_599() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_598() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_597() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_596() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_595() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_594() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_593() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_592() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_591() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_590() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_589() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_588() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_587() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_586() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_585() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_584() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_583() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_582() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_581() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_580() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_579() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_578() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_577() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_576() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_575() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_574() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_573() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_572() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_571() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_570() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_569() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_568() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_567() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_566() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_565() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_564() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_563() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_562() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_561() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_560() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_559() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_558() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_557() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_556() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_555() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_554() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_553() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_552() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_551() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_550() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_549() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_548() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_547() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_546() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_545() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_544() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_543() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_542() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_541() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_540() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_539() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_538() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_537() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_536() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_535() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_534() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_533() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_532() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_531() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_530() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_529() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_528() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_527() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_526() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_525() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_524() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_523() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_522() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_521() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_520() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_519() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_518() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_517() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_516() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_515() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_514() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_513() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_512() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_511() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_510() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_509() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_508() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_507() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_506() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_505() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_504() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_503() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_502() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_501() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_500() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_499() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_498() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_497() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_496() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_495() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_494() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_493() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_492() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_491() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_490() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_489() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_488() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_487() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_486() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_485() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_484() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_483() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_482() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_481() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_480() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_479() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_478() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_477() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_476() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_475() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_474() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_473() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_472() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_471() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_470() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_469() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_468() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_467() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_466() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_465() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_464() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_463() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_462() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_461() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_460() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_459() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_458() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_457() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_456() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_455() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_454() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_453() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_452() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_451() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_450() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_449() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_448() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_447() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_446() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_445() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_444() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_443() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_442() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_441() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_440() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_439() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_438() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_437() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_436() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_435() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_434() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_433() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_432() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_431() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_430() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_429() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_428() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_427() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_426() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_425() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_424() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_423() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_422() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_421() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_420() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_419() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_418() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_417() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_416() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_415() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_414() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_413() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_412() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_411() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_410() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_409() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_408() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_407() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_406() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_405() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_404() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_403() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_402() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_401() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_400() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_399() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_398() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_397() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_396() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_395() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_394() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_393() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_392() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_391() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_390() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_389() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_388() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_387() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_386() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_385() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_384() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_383() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_382() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_381() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_380() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_379() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_378() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_377() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_376() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_375() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_374() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_373() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_372() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_371() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_370() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_369() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_368() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_367() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_366() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_365() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_364() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_363() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_362() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_361() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_360() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_359() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_358() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_357() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_356() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_355() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_354() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_353() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_352() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_351() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_350() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_349() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_348() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_347() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_346() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_345() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_344() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_343() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_342() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_341() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_340() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_339() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_338() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_337() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_336() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_335() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_334() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_333() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_332() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_331() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_330() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_329() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_328() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_327() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_326() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_325() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_324() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_323() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_322() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_321() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_320() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_319() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_318() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_317() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_316() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_315() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_314() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_313() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_312() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_311() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_310() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_309() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_308() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_307() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_306() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_305() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_304() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_303() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_302() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_301() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_300() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_299() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_298() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_297() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_296() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_295() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_294() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_293() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_292() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_291() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_290() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_289() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_288() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_287() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_286() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_285() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_284() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_283() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_282() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_281() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_280() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_279() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_278() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_277() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_276() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_275() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_274() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_273() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_272() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_271() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_270() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_269() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_268() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_267() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_266() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_265() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_264() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_263() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_262() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_261() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_260() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_259() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_258() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_257() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_256() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_255() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_254() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_253() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_252() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_251() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_250() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_249() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_248() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_247() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_246() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_245() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_244() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_243() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_242() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_241() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_240() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_239() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_238() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_237() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_236() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_235() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_234() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_233() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_232() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_231() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_230() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_229() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_228() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_227() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_226() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_225() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_224() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_223() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_222() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_221() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_220() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_219() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_218() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_217() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_216() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_215() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_214() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_213() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_212() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_211() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_210() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_209() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_208() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_207() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_206() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_205() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_204() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_203() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_202() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_201() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_200() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_199() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_198() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_197() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_196() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_195() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_194() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_193() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_192() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_191() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_190() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_189() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_188() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_187() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_186() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_185() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_184() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_183() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_182() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_181() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_180() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_179() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_178() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_177() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_176() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_175() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_174() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_173() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_172() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_171() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_170() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_169() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_168() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_167() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_166() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_165() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_164() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_163() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_162() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_161() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_160() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_159() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_158() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_157() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_156() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_155() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_154() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_153() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_152() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_151() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_150() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_149() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_148() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_147() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_146() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_145() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_144() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_143() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_142() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_141() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_140() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_139() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_138() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_137() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_136() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_135() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_134() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_133() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_132() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_131() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_130() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_129() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_128() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_127() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_126() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_125() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_124() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_123() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_122() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_121() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_120() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_119() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_118() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_117() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_116() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_115() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_114() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_113() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_112() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_111() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_110() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_109() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_108() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_107() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_106() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_105() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_104() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_103() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_102() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_101() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_100() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_99() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_98() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_97() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_96() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_95() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_94() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_93() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_92() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_91() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_90() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_89() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_88() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_87() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_86() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_85() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_84() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_83() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_82() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_81() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_80() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_79() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_78() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_77() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_76() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_75() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_74() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_73() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_72() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_71() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_70() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_69() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_68() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_67() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_66() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_65() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_64() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_63() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_62() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_61() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_60() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_59() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_58() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_57() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_56() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_55() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_54() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_53() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_52() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_51() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_50() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_49() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_48() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_47() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_46() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_45() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_44() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_43() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_42() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_41() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_40() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_39() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_38() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_37() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_36() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_35() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_34() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_33() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_32() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_31() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_30() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_29() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_28() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_27() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_26() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_25() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_24() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_23() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_22() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_21() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_20() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_19() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_18() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_17() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_16() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_15() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_14() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_13() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_12() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_11() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_10() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_9() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_8() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_7() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_6() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_5() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_4() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_3() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_2() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_1() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject_0() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    public void testTwoLevelParameterizedObject() {
        com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>> bar = new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>(new com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo(1)));
        java.lang.String expectedJson = "{\"t\":{\"t\":{\"b\":1}}}";
        // Ensure that serialization works without specifying the type explicitly
        java.lang.String json = gson.toJson(bar);
        junit.framework.Assert.assertEquals(expectedJson, json);
        // Ensure that serialization also works when the type is specified explicitly
        json = gson.toJson(bar, new com.google.gson.reflect.TypeToken<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Bar<com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.Foo>>>() {}.getType());
        junit.framework.Assert.assertEquals(expectedJson, json);
    }

    private static class Foo {
        @java.lang.SuppressWarnings("unused")
        int b;

        Foo(int b) {
            this.b = b;
        }
    }

    private static class Bar<T> {
        @java.lang.SuppressWarnings("unused")
        T t;

        Bar(T t) {
            this.t = t;
        }
    }

    public static junit.framework.Test suite() {
        junit.extensions.TestSetup setup = new junit.extensions.TestSetup(new junit.framework.TestSuite(com.google.gson.functional.RawSerializationTest_testTwoLevelParameterizedObject_1000.class) {}) {
            protected void setUp() {
                org.powerapi.jjoules.junit4.EnergyTest.beforeTest("com.google.gson.functional.RawSerializationTest", "testTwoLevelParameterizedObject");
            }

            protected void tearDown() {
                org.powerapi.jjoules.junit4.EnergyTest.afterTest();
            }
        };
        return setup;
    }
}